项目框架搭建教程
http://www.jianshu.com/p/99239b9c1630


1，mvp
https://github.com/antoniolg/androidmvp                   //mvp项目
http://www.jianshu.com/p/0590f530c617#                   //Android MVP 详解（下）
http://www.jianshu.com/p/9a6845b26856                    //Android MVP 详解（上）
http://www.jianshu.com/p/1912473dff9a                    //mvc,mvp，解析
http://www.jianshu.com/p/c1c546724e4d                    //mvc,mvp，解析
http://gold.xitu.io/entry/5808715a0e3dd900589f8c84       //mvc,mvp，解析
http://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&mid=2650236921&idx=1&sn=4b2826b600a26b1cd3349ac91593b361&scene=4#wechat_redirect         //mvp，解析
https://mp.weixin.qq.com/s?__biz=MzA3NTYzODYzMg==&mid=2653577546&idx=1&sn=e10be159645a3aa8f6d6f209420fb412&scene=1&srcid=0728U4135JRuGMFkOWkOtQBm&key=8dcebf9e179c9f3a86d9048f80442fd7cadb9f4b0d76a7e184cc8aa4eaeb0c79d39a92070e8e17bdfe87e4fda296cd62&ascene=0&uin=MTYzMjY2MTE1&devicetype=iMac+MacBookPro10%2C1+OSX+OSX+10.11.6+build(15G31)&version=11020201&pass_ticket=V8QaEJ%2BmvU8bCCIOxfM%2F0xMiG4Kpfz5HF%2BfSb%2FYk0MY%3D
http://www.jianshu.com/p/569ab68da482
http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&mid=403539764&idx=1&sn=d30d89e6848a8e13d4da0f5639100e5f#rd
http://mp.weixin.qq.com/s?__biz=MzAxMTI4MTkwNQ==&mid=2650821254&idx=1&sn=00135425de3be0834fb84fbe3fd90aea&chksm=80b78618b7c00f0e977f43710fa9e216466aaac91ead5ac8d377b313b929bcf79e5bc1f1d93a&scene=4#wechat_redirect    //mvp生产器插件




2，App启动时间优化
http://www.woaitqs.cc/android/2016/06/21/activity-service.html   //应用进程启动流程
http://hukai.me/android-performance-patterns-season-6/   //App启动时间优化
http://gityuan.com/2016/10/09/app-process-create-2/       //理解Android进程启动之全过程
http://iceanson.github.io/Android%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6-%E6%80%BB%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%8D%E7%97%9B%E4%B8%8D%E7%97%92%E7%9A%84%E5%9D%8E                  //App启动时间优化
https://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&mid=2650236250&idx=1&sn=b8ff283fe65f2e344cec02f54a6cdb68&scene=1&srcid=0630K01k7Ug61jnEnYN41Yar&key=77421cf58af4a653ca962306150f9303dc55a7fc854dee0666b933e6f40630031aeab795fe891e4f9b2e9d1dda73e5ea&ascene=0&uin=MTYzMjY2MTE1&devicetype=iMac+MacBookPro10%2C1+OSX+OSX+10.11.5+build(15F34)&version=11020201&pass_ticket=jM%2BbygFNqet8QLpoq2udzLcou6IDa0xkRUMcYWCzFnU%3D
http://blog.nimbledroid.com/2016/04/20/pushing-limits-of-app-startup-time-zh.html
http://www.tuicool.com/articles/fiIRziF
http://www.tuicool.com/articles/B7FrAr
http://www.tuicool.com/articles/UFn2AjQ


3,android 内存管理机制
http://jayfeng.com/2016/03/11/%E7%90%86%E8%A7%A3Java%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/     //理解Java垃圾回收机制 
http://www.jianshu.com/p/106795175971                //深入android内存分配和回收
https://yq.aliyun.com/articles/6385?spm=5176.100239.yqblog1.16.Gmt2Od&utm_source=tuicool&utm_medium=referral       Android开发之内存管理 


4,Dagger 研究
http://www.jianshu.com/p/01d3c014b0b1
http://www.tuicool.com/articles/naMBviQ
http://www.tuicool.com/articles/InUv2yj
http://www.tuicool.com/articles/jaYRVj2      //Dagger2源码分析-最简单的注入过程
http://www.tuicool.com/articles/jI3yemA      //带着疑惑走进Dagger2
http://www.tuicool.com/articles/Yr6NjeM      //Dagger2 入门 1
http://www.tuicool.com/articles/MBf63u3      //Dagger2 入门 2


5， Retrofit 研究
https://mp.weixin.qq.com/s?__biz=MzA3NTYzODYzMg==&mid=2653577186&idx=1&sn=1a5f6369faeb22b4b68ea39f25020d28&scene=0&key=f5c31ae61525f82eff1e94d54c4abd1c47958e9f7fe5751f2d201958841a354f0423e4ce98cb895058808f330921bde6&ascene=0&uin=MTYzMjY2MTE1&devicetype=iMac+MacBookPro10%2C1+OSX+OSX+10.11.4+build(15E65)&version=11020201&pass_ticket=rsJxex9Bn1eN7iJgW6FUI2KG3V9O6e3TH42j1U%2Fy5SU%3D
http://www.jianshu.com/p/45cb536be2f4
http://gank.io/post/56e80c2c677659311bed9841          //RxJava 与 Retrofit 结合的最佳实践
https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/
6,EventBus 研究
https://mp.weixin.qq.com/s?__biz=MzA3NTYzODYzMg==&mid=2653576922&idx=2&sn=54ff6079ea410d9b551cbde2c8fd3ae4&scene=0&key=b28b03434249256b9f9f929f5d8342dc8d781c56ce2012a9a95895bd530dff7cb483074dfae0afd57d41191b5bc3cd8e&ascene=0&uin=MTYzMjY2MTE1&devicetype=iMac+MacBookPro10%2C1+OSX+OSX+10.11.4+build(15E65)&version=11020201&pass_ticket=uvaoqgKrmqCbHvw0ZkIPvREY%2Bd8h88k%2F6G%2BwEl06EuU%3D
https://segmentfault.com/a/1190000004279679      //EventBus 3.0的用法详解（一）
http://kymjs.com/code/2015/12/12/01/        

6,mvvm 研究
http://mp.weixin.qq.com/s?__biz=MzA4MjU5NTY0NA==&mid=401410759&idx=1&sn=89f0e3ddf9f21f6a5d4de4388ef2c32f#rd
https://segmentfault.com/a/1190000003966281


7,MVC
http://www.tuicool.com/articles/U73q2mQ            //完全解析 Android 项目架构 (1) - MVC
http://www.tuicool.com/articles/ZFRfq2j            //http://www.tuicool.com/articles/U73q2mQ
http://www.tuicool.com/articles/zi6nM3a           //MVC架构示例
http://www.tuicool.com/articles/EfaMJrq             //android基础：浅析mvc与mvp
http://www.tuicool.com/articles/QB7jMzA             //Android与MVC设计模式
http://www.tuicool.com/articles/Y3eIFf6             //MVC模式
http://www.tuicool.com/articles/reAriin             //Android 设计模式之MVC模式
http://www.tuicool.com/articles/3MRbeiv             //Android和MVC
http://www.tuicool.com/articles/U77NFv              //前端之Android入门(3):MVC模式(上)
http://www.tuicool.com/articles/zyAzUv              //前端之Android入门(4):MVC模式(中)
http://www.tuicool.com/articles/YRj2Qr              //前端之Android入门(5):MVC模式(下)
http://www.2cto.com/kf/201506/405766.html           //框架模式 MVC 在Android中的使用b
笔记：Model 负责业务的处理，数据的加载并拥有View的引用，  activity作为Contronller拥有Model的引用， 
,View的响应回掉到Contronller，Contronller调用Model处理业务理解，Model处理完就通知view更新界面（这是标准的流程），当然如果项目不大的话activity可同时做为view和Contronller。


8,热修复研究
http://blog.csdn.net/lisdye2/article/details/52049857
http://blog.csdn.net/lisdye2/article/details/52094693
blog.csdn.net/lisdye2/article/details/52119602

9，增量d更新研究
http://mp.weixin.qq.com/s?__biz=MzAxMTI4MTkwNQ==&mid=2650821209&idx=1&sn=6821835111ce0ab4452866efaf4d78f2&chksm=80b786c7b7c00fd19663782b9ac51dea1c881456a3933e6848aa7d24aec0eb56066f504022f9&scene=0#wechat_redirect


10, Material Design
http://blog.csdn.net/zly921112/article/details/50733435   //控件使用详解  
http://blog.csdn.net/zly921112/article/details/51318851   //控件使用详解
http://mp.weixin.qq.com/s?__biz=MzAxMTI4MTkwNQ==&mid=2650821396&idx=1&sn=dc779021ca94a989ecb2a1173145d2e7&chksm=80b7878ab7c00e9c94f740ab778a14ad400489e3aa62dcd8170dd9a0bbcfacf96be75c96517c&scene=4#wechat_redirect         //沉浸式模式这一篇就够了

